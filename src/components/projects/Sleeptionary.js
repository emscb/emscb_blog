import React from "react";

const Sleeptionary = () => {
	return (
		<div>
			<h2>개요 Summary</h2>
			<p>
				대학교 학부에서 최초로 프로그래밍이 포함된 팀 프로젝트. SBC를 이용하는
				IoT 프로젝트였습니다. (https://github.com/emscb/Sleeptionary)
			</p>

			<h2>개발 내용 Deployment content</h2>
			<ul>
				<li>각 센서 사용을 위한 예제 코드 활용</li>
				<li>수면이 끝난 후 데이터 처리, DB로 전송</li>
				<li>쌓인 데이터로 사용자에게 보여줄 내용 작성, 배포</li>
			</ul>

			<h2>프로젝트 설명 Description</h2>
			<p>
				팀 별로 아이디에이션 이후 실제로 만들어보고 이것이 상업성이 있는가
				발표해야 하는 프로젝트였습니다. 저희 팀은 수면 분석 장치를 만들기로
				하였고 수면 환경 분석을 위한 여러 센서들을 부착하고 프로그래밍해야
				했습니다. 저희 학부에서는 프로그래밍을 팀으로 하는 경우가 없었기 때문에
				협업 도구에 대한 지식이 없었습니다. 저는 git을 계속 사용해왔어서
				팀원들에게 간단한 사용법을 알려주고 함께 작업하기로 하였습니다.
			</p>
			
			<p>
				저희는 팀 회의 때마다 항상 아젠다와 원하는 결론/결과를 정하고
				시작했습니다. 팀 사이에 서로 존댓말을 사용하였고, 늘 서로 명확하게 같은
				내용을 이해하기 위해 노력했습니다. 그런 점에서 git을 사용하여 회의록을
				쓰고 서로 계속 같은 내용을 바라볼 수 있어 좋았습니다. 저를 제외한 다른
				팀원들은 프로그래밍을 해본 적이 없어서 각자 맡은 센서에 대한 사용법,
				부착 방법, 예제 코드 등 검색을 담당하고 코드들을 병합하고 정리하는 것을
				제가 담당했었습니다. 명확하게 어떻게 제품이 실행되어야 하는지 이해하고
				계속 논의하며 맞추어 나갔습니다. 수면 분석의 결과로 통계 자료들도
				필요했기 때문에 데이터베이스가 필요했습니다. 최대한 실제 서비스할 때의
				형태로 맞춰보고 싶어 AWS 같은 클라우드 서비스도 이용하려 했지만 시간이
				부족하여 실제 활용해보진 못했습니다. 라즈베리파이를 사용해서 정보를
				수집하고 sqlite DB에 저장한 후 사용자의 수면이 끝났다고 판단되면 축적된
				데이터를 기반으로 통계를 내어 보여줍니다. 결과 통계는 기본적으로
				웹페이지에서 볼 수 있게 작성하였었고 어플리케이션으로도 가능할
				것이다라는 비전만 제시하였습니다.
			</p>

			
		</div>
	);
};

export default Sleeptionary;
